version: '3.9'

services:
  frontend:
    build:
      context: GPTutor-Frontend
      dockerfile: Dockerfile
    container_name: frontend
    volumes:
      - www-html:/app/build/
    networks:
      - app

  nginx:
    image: nginx:1.19.8-alpine
    depends_on:
      - frontend
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - www-html:/var/www/html
      - ./nginx-conf.d:/etc/nginx/conf.d
      - etc-letsencrypt:/etc/letsencrypt
    networks:
      - app

  certbot:
    image: certbot/certbot
    depends_on:
      - nginx
    container_name: certbot
    volumes:
      - etc-letsencrypt:/etc/letsencrypt
      - www-html:/var/www/html
    command: certonly --webroot --webroot-path=/var/www/html --email lowww1337@gmail.com --agree-tos --no-eff-email -d gptutor.site

  backend:
    build: ./GPTutor-Backend
    container_name: backend
    ports:
      - "8080:8080"
    depends_on:
      - postgresql
    env_file: .env
    networks:
      - app
    environment:
      SPRING_APPLICATION_JSON: '{
             "spring.datasource.url": "jdbc:postgresql://postgresql:5432/postgres",
             "spring.datasource.username": ${POSTGRES_USER},
             "spring.datasource.password": ${POSTGRES_PASSWORD},
             "auth.client.secret": ${AUTH_SECRET_KEY},
             "auth.skip": ${CHECK_AUTH},
             "vk.key": ${VK_KEY},
             "cors.allowed.origins": ${CORS_ORIGIN}
      }'

  postgresql:
    image: 'postgres:13.1-alpine'
    container_name: postgresql
    env_file: .env
    networks:
      - app

volumes:
  www-html:
  etc-letsencrypt:

networks:
  app:
    driver: bridge
